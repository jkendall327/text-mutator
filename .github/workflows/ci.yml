name: Text Mutator

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"
        type: choice
        options:
          - info
          - warning
          - debug
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always
  APP_LOCATION: "/frontend" # frontend client code
  OUTPUT_LOCATION: "dist" # frontend client code build output

permissions:
  id-token: write
  contents: read

jobs:
  test_backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build the backend
        run: cargo build --verbose --manifest-path backend/Cargo.toml

      - name: Test the backend
        run: cargo test --verbose --manifest-path backend/Cargo.toml

  test_frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.3.0
        with:
          node-version: 23
          cache: "npm"
          cache-dependency-path: "frontend/package.json"

      - name: Build the frontend
        run: npm --prefix frontend ci

      - name: Test the frontend
        run: npm run --prefix frontend test

  deploy:
    runs-on: ubuntu-latest
    needs: [test_backend, test_frontend]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth with Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy infrastructure via Bicep
        id: bicep
        uses: Azure/bicep-deploy@v2.1.0
        with:
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resource-group-name: "textmutator"
          type: "deployment"
          operation: "create"
          name: "Development"
          scope: "resourceGroup"
          template-file: .infra/main.bicep
          parameters-file: .infra/parameters.bicepparam
          action-on-unmanage-resources: delete
          action-on-unmanage-resourcegroups: delete
          deny-settings-mode: denyWriteAndDelete

      - name: Extract image name from Bicep
        id: image
        run: |
          imageName=$(grep 'param imageName =' .infra/parameters.bicepparam | cut -d '=' -f 2 | xargs)
          echo "imageName=${imageName}" >> $GITHUB_OUTPUT

      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ steps.bicep.outputs.acrLoginServer }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build & Push
        uses: docker/build-push-action@v2
        with:
          context: backend/
          push: true
          build-args: |
            version=${{ github.sha }}
          tags: ${{ steps.bicep.outputs.acrLoginServer }}/${{ steps.image.outputs.imageName }}:${{ github.sha }},${{ steps.bicep.outputs.acrLoginServer }}/${{ steps.image.outputs.imageName }}:latest

      # https://docs.github.com/en/actions/use-cases-and-examples/deploying/deploying-to-azure-static-web-app
      - name: Push the frontend to Azure SWA
        uses: Azure/static-web-apps-deploy@1a947af9992250f3bc2e68ad0754c0b0c11566c9
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: ${{ env.APP_LOCATION }}
          output_location: ${{ env.OUTPUT_LOCATION }}
